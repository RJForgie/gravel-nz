---
import type { CollectionEntry } from 'astro:content';

interface Props {
  races: CollectionEntry<"races">[];
}

const { races } = Astro.props;

// Get current date
const now = new Date();
now.setHours(0, 0, 0, 0);

// Generate next 12 months
const months = Array.from({ length: 12 }, (_, i) => {
  const date = new Date(now.getFullYear(), now.getMonth() + i, 1);
  return {
    key: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`,
    date: date
  };
});

// Find months with races
const monthsWithRaces = new Set(races.map(race => {
  const date = new Date(race.data.date);
  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
}));
---

<nav aria-label="Race calendar navigation">
  <div class="grid grid-cols-2 gap-2 py-4">
    {months.map(({ key, date }) => {
      const month = date.toLocaleDateString('en-NZ', { month: 'long' });
      const year = date.getFullYear();
      const isCurrent = date.getMonth() === now.getMonth() && 
                       date.getFullYear() === now.getFullYear();
      const hasRaces = monthsWithRaces.has(key);
      
      const baseClasses = [
        'group relative flex items-center justify-center px-4 py-2',
        'text-sm font-medium rounded-md transition-all duration-200',
        'backdrop-blur-sm shadow-lg ring-1 ring-inset focus:outline-none focus:ring-2'
      ];

      const currentWithRacesClasses = 'bg-[#4A7153] text-neutral-200 hover:bg-[#5C8A66] ring-[#2C432F]/50 hover:shadow-xl focus:ring-[#2C432F]';
      const currentNoRacesClasses = 'bg-[#4A7153] text-neutral-200 ring-[#2C432F]/50';
      const nonCurrentWithRacesClasses = 'bg-neutral-900/70 text-neutral-300 hover:bg-neutral-800/80 hover:text-neutral-200 hover:shadow-xl ring-neutral-700/50 focus:ring-neutral-500';
      const nonCurrentNoRacesClasses = 'bg-neutral-900/70 text-neutral-400 ring-neutral-700/50 cursor-not-allowed';

      const classes = [
        ...baseClasses,
        isCurrent 
          ? (hasRaces ? currentWithRacesClasses : currentNoRacesClasses)
          : (hasRaces ? nonCurrentWithRacesClasses : nonCurrentNoRacesClasses)
      ].join(' ');

      return hasRaces ? (
        <a
          href={`#${key}`}
          class={classes}
          aria-label={`View races for ${month} ${year}${isCurrent ? ' (current month)' : ''}`}
        >
          <span class="flex flex-col items-center">
            <span class="font-semibold">{month}</span>
            <span class="text-xs opacity-80">{year}</span>
          </span>
        </a>
      ) : (
        <div
          class={classes}
          aria-label={`No races in ${month} ${year}`}
        >
          <span class="flex flex-col items-center">
            <span class="font-semibold">{month}</span>
            <span class="text-xs opacity-80">{year}</span>
          </span>
        </div>
      );
    })}
  </div>
</nav> 