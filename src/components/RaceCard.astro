---
interface Race {
  title: string;
  date: string;
  location: string;
  terrain: string;
  registrationUrl?: string;
  raceOptions: number[];
}

interface Props {
  race: Race;
}

const { race } = Astro.props;

function getRelativeDate(date: Date): string {
  const now = new Date();
  const diffDays = Math.ceil((date.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));
  
  if (diffDays < 0) return 'Past event';
  if (diffDays === 0) return 'Today';
  if (diffDays === 1) return 'Tomorrow';
  if (diffDays < 7) return `In ${diffDays} days`;
  if (diffDays < 30) return `In ${Math.ceil(diffDays / 7)} weeks`;
  if (diffDays < 365) return `In ${Math.ceil(diffDays / 30)} months`;
  return `In ${Math.ceil(diffDays / 365)} years`;
}

const raceDate = new Date(race.date);
const relativeDate = getRelativeDate(raceDate);

// Terrain-based color schemes
const getTerrainColors = (terrain: string) => {
  switch (terrain) {
    case 'gravel':
      return {
        gradient: 'from-[#C49B7A] via-[#A67C52] to-[#8B5A2B]',
        button: {
          text: 'text-[#C49B7A]',
          bg: 'bg-[#C49B7A]/10',
          hoverBg: 'hover:bg-[#C49B7A]',
          border: 'border-[#C49B7A]/30',
          hoverBorder: 'hover:border-[#C49B7A]',
          focus: 'focus:ring-[#C49B7A]/50'
        }
      };
    case 'bikepacking':
      return {
        gradient: 'from-[#7A8BA4] via-[#5A6B84] to-[#3A4B64]',
        button: {
          text: 'text-[#7A8BA4]',
          bg: 'bg-[#7A8BA4]/10',
          hoverBg: 'hover:bg-[#7A8BA4]',
          border: 'border-[#7A8BA4]/30',
          hoverBorder: 'hover:border-[#7A8BA4]',
          focus: 'focus:ring-[#7A8BA4]/50'
        }
      };
    default:
      // Fallback to current muted sage
      return {
        gradient: 'from-[#8B9B87] via-[#6B7B67] to-[#5A6B57]',
        button: {
          text: 'text-[#8B9B87]',
          bg: 'bg-[#8B9B87]/10',
          hoverBg: 'hover:bg-[#8B9B87]',
          border: 'border-[#8B9B87]/30',
          hoverBorder: 'hover:border-[#8B9B87]',
          focus: 'focus:ring-[#8B9B87]/50'
        }
      };
  }
};

const terrainColors = getTerrainColors(race.terrain);
---

<div class="group w-full max-w-3xl">
  <h2 class="sr-only">Race Summary for {race.title}</h2>
  <div 
    class="relative rounded-lg shadow-xl ring-1 ring-neutral-700/50 backdrop-blur-sm bg-neutral-900/95 overflow-hidden transition-all duration-300 hover:ring-neutral-600/70 hover:shadow-2xl hover:bg-neutral-800/95"
  >
    <div class={`absolute top-0 left-0 right-0 h-1 bg-gradient-to-r ${terrainColors.gradient}`}></div>
    
    <div class="p-5">
      <div class="mb-4">
        <div class="flex items-start justify-between mb-2">
          <h3 class="font-['Outfit'] text-2xl font-bold leading-tight text-neutral-100 group-hover:text-white transition-colors">
            {race.title}
          </h3>
          <div class="text-base font-medium text-neutral-400">
            {relativeDate}
          </div>
        </div>
        
        <div class="space-y-1">
          <div class="flex items-center gap-2">
            <svg class="h-4 w-4 text-neutral-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M9.69 18.933l.003.001C9.89 19.02 10 19 10 19s.11.02.308-.066l.002-.001.006-.003.018-.008a5.741 5.741 0 00.281-.14c.186-.096.446-.24.757-.433.62-.384 1.445-.966 2.274-1.765C15.302 14.988 17 12.493 17 9A7 7 0 103 9c0 3.492 1.698 5.988 3.355 7.584a13.731 13.731 0 002.273 1.765 11.842 11.842 0 00.757.433c.1.05.189.09.281.14l.018.008.006.003zM10 11.25a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z" clip-rule="evenodd"></path>
            </svg>
            <span class="text-base text-neutral-300">{race.location}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="h-4 w-4 text-neutral-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z" clip-rule="evenodd"></path>
            </svg>
            <time 
              datetime={race.date}
              class="text-base text-neutral-300"
            >
              {raceDate.toLocaleDateString('en-NZ', { 
                weekday: 'long',
                month: 'long', 
                day: 'numeric'
              })}
            </time>
          </div>
          <div class="flex items-center gap-2">
            <svg class="h-4 w-4 text-neutral-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-1.5 0a6.5 6.5 0 11-11-4.69v.447a3.5 3.5 0 001.025 2.475L8.293 10l-1.768 1.768a3.5 3.5 0 00-1.025 2.475v.447A6.5 6.5 0 0018 10z" clip-rule="evenodd"></path>
            </svg>
            <span class={`text-base capitalize font-medium ${terrainColors.button.text}`}>{race.terrain}</span>
          </div>
        </div>
      </div>

      <div class="flex items-center justify-between">
        <div class="flex-1">
          <div class="flex items-center gap-2 mb-2">
            <svg class="h-4 w-4 text-neutral-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M8.157 2.175a1.5 1.5 0 00-1.147 0l-4.084 1.69A1.5 1.5 0 002 5.251v10.877a1.5 1.5 0 002.074 1.386l3.51-1.452 4.26 1.762a1.5 1.5 0 001.146 0l4.083-1.69A1.5 1.5 0 0018 14.748V3.873a1.5 1.5 0 00-2.073-1.386l-3.51 1.452-4.26-1.763z" clip-rule="evenodd"></path>
            </svg>
            <div class="flex flex-wrap gap-1.5">
              {race.raceOptions.map((distance) => (
                <span
                  class="px-2.5 py-1 text-neutral-200 rounded-full text-base font-medium border bg-neutral-800/60 border-neutral-700/50 hover:bg-neutral-700/60 transition-colors"
                >
                  {distance}km
                </span>
              ))}
            </div>
          </div>
        </div>
        
        {race.registrationUrl && (
          <a 
            href={race.registrationUrl}
            class={`inline-flex items-center px-4 py-2 text-base font-semibold rounded-md transition-all duration-200 focus:outline-none focus:ring-2 ${terrainColors.button.focus} ${terrainColors.button.text} hover:text-white ${terrainColors.button.bg} ${terrainColors.button.hoverBg} border ${terrainColors.button.border} ${terrainColors.button.hoverBorder}`}
            target="_blank"
            rel="noopener noreferrer"
            aria-label={`Register for ${race.title} (opens in new tab)`}
          >
            Register
            <span aria-hidden="true" class="ml-1.5">â†’</span>
          </a>
        )}
      </div>
    </div>
  </div>
</div> 