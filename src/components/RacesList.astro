---
import { getCollection } from 'astro:content';
import RaceCard from "@/components/RaceCard.astro";
import MonthNav from "@/components/MonthNav.astro";

interface Race {
  title: string;
  date: string;
  location: string;
  terrain: string;
  registrationUrl?: string;
  raceOptions: number[];
}

async function getAllRaces() {
  const racesData = await getCollection('races');
  const allRaces = racesData[0].data.races as Race[];
  return allRaces.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());
}

const races = await getAllRaces();

const racesByMonth = races.reduce((acc, race) => {
  const date = new Date(race.date);
  const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
  
  if (!acc[monthKey]) {
    acc[monthKey] = [];
  }
  acc[monthKey].push(race);
  return acc;
}, {} as Record<string, Race[]>);
---

<div class="max-w-5xl mx-auto">
  <div class="max-w-3xl mx-auto px-8">
    <MonthNav races={races} />
    
    <div class="py-6 space-y-6">
      {Object.entries(racesByMonth).map(([monthKey, monthRaces]) => (
        <div id={monthKey} class="scroll-mt-8 space-y-4">
          {monthRaces.map((race) => (
            <div class="transition-all duration-300 hover:-translate-y-1 hover:shadow-2xl">
              <RaceCard race={race} />
            </div>
          ))}
        </div>
      ))}
    </div>

    {races.length === 0 && (
      <div class="text-center py-12">
        <p class="text-lg text-neutral-300">No upcoming races at the moment. Check back soon!</p>
      </div>
    )}
  </div>
</div> 